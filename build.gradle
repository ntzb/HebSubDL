plugins {
    id 'java'
    id 'application'
    id 'org.beryx.runtime' version '1.12.5'
}

group 'com.nbs'
version '1.2.0-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(14)
    }

}

repositories {
    mavenCentral()
    maven { url "https://www.jetbrains.com/intellij-repository/releases" }
    maven { url "https://cache-redirector.jetbrains.com/intellij-dependencies" }
}

configurations {
    antTask
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.0'

    implementation group: 'org.xerial', name: 'sqlite-jdbc', version: '3.36.0.2'
    implementation group: 'commons-io', name: 'commons-io', version: '2.11.0'
    implementation group: 'commons-io', name: 'commons-io', version: '2.11.0'
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.13.0'
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: '2.13.0'
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.13.0'
    implementation group: 'com.googlecode.json-simple', name: 'json-simple', version: '1.1.1'
    implementation group: 'net.lingala.zip4j', name: 'zip4j', version: '2.9.0'
    implementation group: 'com.github.wtekiela', name: 'opensub4j', version: '0.4.1'
    implementation 'com.jetbrains.intellij.java:java-gui-forms-rt:203.7148.30'

    antTask 'com.jetbrains.intellij.java:java-compiler-ant-tasks:203.7148.30'
}

application {
    mainClassName = 'com.nbs.hebsubdl.MainGUI'
    applicationName = 'HebSubDL'
}

test {
    useJUnitPlatform()
}

jar {
    manifest {
        attributes "Main-Class": "com.nbs.hebsubdl.MainGUI"
    }
//    from {
//        configurations.compileClasspath.collect { it.isDirectory() ? it : zipTree(it) }
//    }
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
}

runtime {
    options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']

    additive = true
    //modules = ['jdk.crypto.ec', 'java.desktop', 'java.xml', 'jdk.unsupported', 'java.scripting', 'java.naming', 'java.xml']
    modules = [
            'jdk.crypto.ec',
            'jdk.charsets']

    launcher {
        noConsole = true
    }
    jpackage {
        // Uncomment and adjust the following line if your runtime task is configured to generate images for multiple platforms
        // targetPlatformName = "mac"


        def currentOs = org.gradle.internal.os.OperatingSystem.current()

        if(currentOs.windows) {
            installerOptions += ['--win-per-user-install', '--win-dir-chooser', '--win-menu', '--win-shortcut']
        }
        else if (currentOs.linux) {
            installerOptions += ['--linux-package-name', 'hellofx','--linux-shortcut']
        }
        else if (currentOs.macOsX) {
            installerOptions += ['--mac-package-name', 'hellofx']
        }
    }
}